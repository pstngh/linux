fdisk -l
sd*F = Linux FAT Boot Partition
sd*EFI = Windows EFI System partition
sd*L = Linux Partition
sd*W = Windows NTFS Partition

fdisk /dev/sd*

SCENARIO 1 - Single OS on drive, create fat boot partition first - g / n / 1 / enter / +512M / t / 1 / w
and continue with next partition creation (SCENARIO 2)
--------
SCENARIO 2 - Installing next to windows on same drive, only do this - n / enter / enter / enter / w


mkfs.fat -F32 /dev/sd*F (SCENARIO 1 - CREATING FAT BOOT PARTITION)
mkfs.ext4 /dev/sd*L
mount /dev/sd*L /mnt
mkdir /mnt/boot (SCENARIO 2)
mount /dev/sd*EFI /mnt/boot (SCENARIO 2 - THIS IS THE WINDOWS EFI SYSTEM PARTITION)


timedatectl set-ntp true
pacstrap /mnt base base-devel linux linux-firmware nano dhcpcd
genfstab -U /mnt >> /mnt/etc/fstab
arch-chroot /mnt
pacman -S grub efibootmgr os-prober

_IF DIFFERENT DRIVES_
mkdir /boot/efi
mount /dev/sd*F /boot/efi
grub-install --target=x86_64-efi  --bootloader-id=grub --recheck
_

_IF WINDOWS IS INSTALLED ON SAME DRIVE_
mount /dev/sd*EFI /boot
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
mkdir /mnt/windows
mount /sd*W /mnt/windows
_
grub-mkconfig -o /boot/grub/grub.cfg
_

systemctl enable dhcpcd

passwd
groupadd -r autologin
useradd -mg users -G wheel,storage,power,autologin -s /bin/bash pstn
passwd pstn
EDITOR=nano visudo
_UNCOMMENT %wheel ALL=(ALL) ALL

nano /etc/locale.gen -> uncomment ONLY en_US.UTF-8 UTF-8
locale-gen
echo LANG=en_US.UTF-8 > /etc/locale.conf
export LANG=en_US.UTF-8

ln -sf /usr/share/zoneinfo/America/Toronto /etc/localtime
hwclock --systohc --utc
echo "arch" > /etc/hostname

exit
umount -a
telinit 6

curl -O https://raw.githubusercontent.com/pstngh/linux/master/pstn.sh

sudo gedit /etc/default/grub - acpi_backlight=none

_IF THERE'S ANY ISSUES_ 1st should be done already
#echo LANG=en_US.UTF-8 >> /etc/locale.conf
#echo LANGUAGE=en_US >> /etc/locale.conf
#echo LC_ALL=C >> /etc/locale.conf
